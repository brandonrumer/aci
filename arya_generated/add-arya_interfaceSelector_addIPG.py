#!/usr/bin/env python
'''
Autogenerated code using arya.py

method: POST
url: https://sandboxapicdc.cisco.com/api/node/mo/uni/infra/accportprof-Leaf101/hports-1:01-typ-range/rsaccBaseGrp.json
payload{"infraRsAccBaseGrp":{"attributes":{"tDn":"uni/infra/funcprof/accbundle-Leaf101..102_VPC_e01:e02_UCS1_IPG","status":"created,modified"},"children":[]}}

Validated working BDR 20200911
  Note: I had to change line 443 in arya.py:
    https://github.com/datacenter/arya/issues/12
  The topMo also required manual entry because of the POST URL
'''

### Adds a IPG to an existing interface selector ###

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.request
import cobra.mit.session
import cobra.model.infra
from cobra.internal.codec.xmlcodec import toXMLStr

# Disable insecure certificate warning
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://sandboxapicdc.cisco.com', 'admin', 'ciscopsdt')
md = cobra.mit.access.MoDirectory(ls)
md.login()

##################################################################
### Replace the text below with the dn of your top object ###
# the top level object on which operations will be made
topMo = md.lookupByDn('uni/infra/accportprof-Leaf101/hports-1:01-typ-range')
##################################################################


# build the request using cobra syntax
infraRsAccBaseGrp = cobra.model.infra.RsAccBaseGrp(topMo, tDn='uni/infra/funcprof/accbundle-Leaf101..102_VPC_e01:e02_UCS1_IPG')


# commit the generated code to APIC
print(toXMLStr(topMo))
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)

