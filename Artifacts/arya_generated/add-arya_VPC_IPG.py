#!/usr/bin/env python
'''
Autogenerated code using arya.py
Original Object Document Input: 
{"infraAccBndlGrp":{"attributes":{"dn":"uni/infra/funcprof/accbundle-Leaf101..102_VPC_e01:e02_UCS1_IPG","lagT":"node","name":"Leaf101..102_VPC_e01:e02_UCS1_IPG","rn":"accbundle-Leaf101..102_VPC_e01:e02_UCS1_IPG","status":"created"},"children":[{"infraRsLacpPol":{"attributes":{"tnLacpLagPolName":"lacp_active","status":"created,modified"},"children":[]}},{"infraRsCdpIfPol":{"attributes":{"tnCdpIfPolName":"CDP-ON","status":"created,modified"},"children":[]}},{"infraRsMcpIfPol":{"attributes":{"tnMcpIfPolName":"MCP-ON","status":"created,modified"},"children":[]}},{"infraRsLldpIfPol":{"attributes":{"tnLldpIfPolName":"LLDP-ON","status":"created,modified"},"children":[]}}]}}

raise RuntimeError('Please review the auto generated code before ' +
                    'executing the output. Some placeholders will ' +
                    'need to be changed')


Validated working BDR 20200911
  Note: I had to change line 443 in arya.py:
    https://github.com/datacenter/arya/issues/12
'''

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.naming
import cobra.mit.request
import cobra.mit.session
import cobra.model.infra
from cobra.internal.codec.xmlcodec import toXMLStr

# Disable insecure certificate warning
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://sandboxapicdc.cisco.com', 'admin', 'ciscopsdt')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
# Confirm the dn below is for your top dn
topDn = cobra.mit.naming.Dn.fromString('uni/infra/funcprof/accbundle-Leaf101..102_VPC_e01:e02_UCS1_IPG')
topParentDn = topDn.getParent()
topMo = md.lookupByDn(topParentDn)

# build the request using cobra syntax
infraAccBndlGrp = cobra.model.infra.AccBndlGrp(topMo, lagT='node', name='Leaf101..102_VPC_e01:e02_UCS1_IPG')
infraRsLacpPol = cobra.model.infra.RsLacpPol(infraAccBndlGrp, tnLacpLagPolName='lacp_active')
infraRsCdpIfPol = cobra.model.infra.RsCdpIfPol(infraAccBndlGrp, tnCdpIfPolName='CDP-ON')
infraRsMcpIfPol = cobra.model.infra.RsMcpIfPol(infraAccBndlGrp, tnMcpIfPolName='MCP-ON')
infraRsLldpIfPol = cobra.model.infra.RsLldpIfPol(infraAccBndlGrp, tnLldpIfPolName='LLDP-ON')


# commit the generated code to APIC
print(toXMLStr(topMo))
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)

